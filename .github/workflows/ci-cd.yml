name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and Generate Artifacts
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.x'

    - name: Install dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release

    - name: Publish
      run: dotnet publish --configuration Release --output ./publish

  test:
    name: Run Unit Tests and Code Quality Checks
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.x'

    - name: Install dependencies
      run: dotnet restore

    - name: Run tests
      run: dotnet test --no-restore --verbosity normal

    - name: Code quality and coverage
      run: |
        dotnet tool install --global dotnet-reportgenerator-globaltool
        reportgenerator -reports:TestResults/*.xml -targetdir:coverage-report -reporttypes:Html

    - name: Upload code coverage results
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: coverage-report

  deploy:
    name: Deploy to Staging Environment
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.x'

    - name: Deploy application
      run: |
        echo "Deploying application to staging environment..."
        # Add deployment script or commands here
        # For example, you might use a tool like Azure CLI or a deployment script to handle deployment
        # az webapp deploy --resource-group <resource-group> --name <app-name> --src-path ./publish
